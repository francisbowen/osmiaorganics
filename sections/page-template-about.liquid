
{% for block in section.blocks %}
{% if block.type == 'image' %}

<style>
  {% unless block.settings.image == blank and block.settings.parallax_me %}
    .hero--{{ block.id }} {
      background-position: {{ block.settings.alignment }};
    }

        @media screen and (max-width: 150px) {
      .hero--{{ block.id }} {
        {% if block.settings.mobileimage != blank %}
          background-image: url('{{ block.settings.mobileimage | img_url: '150x' }}');
        {% else %}  
          background-image: url('{{ block.settings.image | img_url: '150x' }}');
        {% endif %}
      }
    }

    @media screen and (min-width: 151px) and (max-width: 300px) {
     .hero--{{ block.id }} {
        {% if block.settings.mobileimage != blank %}
          background-image: url('{{ block.settings.mobileimage | img_url: '300x' }}');
        {% else %}  
          background-image: url('{{ block.settings.image | img_url: '300x' }}');
        {% endif %}
      }
    }

    @media screen and (min-width: 301px) and (max-width: 600px) {
      .hero--{{ block.id }} {
        {% if block.settings.mobileimage != blank %}
          background-image: url('{{ block.settings.mobileimage | img_url: '600x' }}');
        {% else %}  
          background-image: url('{{ block.settings.image | img_url: '600x' }}');
        {% endif %}
      }
    }
    @media screen and (min-width: 601px)  and (max-width: 767px) {
      .hero--{{ block.id }} {
        {% if block.settings.mobileimage != blank %}
          background-image: url('{{ block.settings.mobileimage | img_url: '900x' }}');
        {% else %}  
          background-image: url('{{ block.settings.image | img_url: '900x' }}');
        {% endif %}
      }
    }
    @media screen and (min-width: 768px) and (max-width: 1000px) {
      .hero--{{ block.id }} {
        background-image: url('{{ section.settings.image | img_url: '1000x1000' }}');
      }
    }

    @media screen and (min-width: 1001px) {
      .hero--{{ block.id }} {
        background-image: url('{{ block.settings.image | img_url: '2000x2000' }}');
      }
    }
  {% endunless %}

  {% if block.settings.title_color %}
    .hero--{{ block.id }} .hero__inner h2.mega-title {
      color: {{ block.settings.title_color }};
    }
  {% endif %}

  {% if block.settings.text_color %}
    .hero--{{ block.id }} .hero__inner .mega-subtitle {
      color: {{ block.settings.text_color }};
      
    }
  {% endif %}
   
   


  {% unless block.settings.overlay %}
    .animsition.finished .hero--{{ block.id }} .hero__overlay::before {
      display: none;
    }
  {% endunless %}
</style>

<div class="{{ block.settings.contained }}" style="padding: 20px 0">
   <div class="hero hero--{{ block.id }} hero--{{ block.settings.hero_size }}{% if block.settings.title != blank or block.settings.text != blank or block.settings.button_label != blank %} {% endif %}  hidden-sm-down">
      {% if block.settings.image == blank %}
      <div class="placeholder-background">
         {{ 'lifestyle-1' | placeholder_svg_tag: 'placeholder-svg' }}
      </div>
      {% endif %}
      {% if block.settings.image != blank and block.settings.parallax_me %}
      <img class="parallaxer" src="{{ block.settings.image | img_url: '1000x1000' }}" data-parallax='{"y" : {{ block.settings.parallax_sensitivity }}}' />
      {% endif %}
      <div class="hero__inner row image-with-text-full">
         <div class="col-md-30 image-with-text-item{% if block.settings.text_layout == 'center' %} offset-md-15{% elsif block.settings.text_layout == 'right' %} offset-md-30{% endif %} text-{{ block.settings.text_align }}">
            {% if block.settings.title != blank %}
            <h2 class="h1 mega-title{% if block.settings.text_size == 'large' %} mega-title--large{% endif %}">{{ block.settings.title | escape }}</h2>
            {% endif %}
            {% if block.settings.text != blank %}
            <div class="rte-setting mega-subtitle{% if block.settings.text_size == 'large' %} mega-subtitle--large{% endif %}">{{ block.settings.text }}</div>
            {% endif %}
            {% if block.settings.button_label != blank and block.settings.button_link != blank %}
            {% comment %} {% if forloop.index == 4 %} popup-with-zoom-anim  {% endif %} {% endcomment %}
            <a href="{{ block.settings.button_link }}" class="btn hero__btn team-member-img {% if block.settings.button_link contains "#sarahbio" %} popup-with-zoom-anim  {% endif %}">
            {{ block.settings.button_label }}
            </a>
            {% endif %}
         </div>
      </div>
   </div>
   <div class="hidden-md-up">
      {% if block.settings.image == blank %}
      <div class="placeholder-background">
         {{ 'lifestyle-1' | placeholder_svg_tag: 'placeholder-svg' }}
      </div>
      {% endif %}
      {% if block.settings.image != blank and block.settings.parallax_me %}
      <img class="parallaxer" src="{{ block.settings.image | img_url: '1000x1000' }}" data-parallax='{"y" : {{ block.settings.parallax_sensitivity }}}' />
      {% endif %}
      <div class="hero hero--{{ block.id }} hero--{{ block.settings.hero_size }}"></div>
      <div class="hero__inner row image-with-text-full">
         <div class="col-md-30 image-with-text-item{% if block.settings.text_layout == 'center' %} offset-md-15{% elsif block.settings.text_layout == 'right' %} offset-md-30{% endif %} text-{{ block.settings.text_align }}">
            {% if block.settings.title != blank %}
            <h2 class="h1 mega-title{% if block.settings.text_size == 'large' %} mega-title--large{% endif %}">{{ block.settings.title | escape }}</h2>
            {% endif %}
            {% if block.settings.text != blank %}
            <div class="rte-setting mega-subtitle{% if block.settings.text_size == 'large' %} mega-subtitle--large{% endif %}">{{ block.settings.text }}</div>
            {% endif %}
            {% if block.settings.button_label != blank and block.settings.button_link != blank %}
            <div class="text-center">
               <a href="{{ block.settings.button_link }}" class="btn btn--secondary btn--small blog-btn-small {% if block.settings.button_link contains "#sarahbio" %} popup-with-zoom-anim  {% endif %}">
               {{ block.settings.button_label }}
               </a>
            </div>
            {% endif %}
         </div>
      </div>
   </div>
</div>
{% endif %}
{% endfor %}
{% for block in section.blocks %}
{% if block.type == 'team' %}

<style>
  {% unless block.settings.image == blank and block.settings.parallax_me %}
    .hero--{{ block.id }} {
      background-position: {{ block.settings.alignment }};
    }

    @media screen and (max-width: 150px) {
      .hero--{{ block.id }} {
        background-image: url('{{ block.settings.mobileimage | img_url: '150x150' }}');
      }
    }

    @media screen and (min-width: 151px) and (max-width: 300px) {
      .hero--{{ block.id }} {
        background-image: url('{{ block.settings.mobileimage | img_url: '300x300' }}');
      }
    }

    @media screen and (min-width: 301px) and (max-width: 600px) {
      .hero--{{ block.id }} {
        background-image: url('{{ block.settings.mobileimage | img_url: '600x600' }}');
      }
    }

    @media screen and (min-width: 601px) and (max-width: 800px) {
      .hero--{{ block.id }} {
        background-image: url('{{ block.settings.image | img_url: '800x800' }}');
      }
    }

    @media screen and (min-width: 801px) and (max-width: 1000px) {
      .hero--{{ block.id }} {
        background-image: url('{{ block.settings.image | img_url: '1000x1000' }}');
      }
    }

    @media screen and (min-width: 1001px) {
      .hero--{{ block.id }} {
        background-image: url('{{ block.settings.image | img_url: '2000x2000' }}');
      }
    }
  {% endunless %}

  {% if block.settings.title_color %}
    .hero--{{ block.id }} .hero__inner h2.mega-title {
      color: {{ block.settings.title_color }};
    }
  {% endif %}

  {% if block.settings.text_color %}
    .hero--{{ block.id }} .hero__inner .mega-subtitle {
      color: {{ block.settings.text_color }};
      
    }
  {% endif %}
   {% if block.settings.button_color %}
   .hero--{{ block.id }} .hero__btn {
      color: {{ block.settings.button_color }};
     border: 2px solid {{ block.settings.border_color }};
     background-color:{{ block.settings.background_color }};
   }
     .hero--{{ block.id }} a.btn.hero__btn:hover {
     background-color:{{ block.settings.hover-background_color }};
     color:{{ block.settings.hover_color }};
    }
  {% endif %}
   


  {% unless block.settings.overlay %}
    .animsition.finished .hero--{{ block.id }} .hero__overlay::before {
      display: none;
    }
  {% endunless %}
</style>

<div class="{{ block.settings.contained }}" style="padding: 20px 0">
  <div class="hero hero--{{ block.id }} hero--{{ block.settings.hero_size }}{% if block.settings.title != blank or block.settings.text != blank or block.settings.button_label != blank %} {% endif %}">
    {% if block.settings.image == blank %}
      <div class="placeholder-background">
        {{ 'lifestyle-1' | placeholder_svg_tag: 'placeholder-svg' }}
      </div>
    {% endif %}
    {% if block.settings.image != blank and block.settings.parallax_me %}
      <img class="parallaxer" src="{{ block.settings.image | img_url: '1000x1000' }}" data-parallax='{"y" : {{ block.settings.parallax_sensitivity }}}' />
    {% endif %}
    <div class="hero__inner row image-with-text-full">
      <div class="col-md-30 image-with-text-item{% if block.settings.text_layout == 'center' %} offset-md-15{% elsif block.settings.text_layout == 'right' %} offset-md-30{% endif %} text-{{ block.settings.text_align }}">
        {% if block.settings.title != blank %}
          <h2 class="h1 mega-title{% if block.settings.text_size == 'large' %} mega-title--large{% endif %}">{{ block.settings.title | escape }}</h2>
        {% endif %}
        {% if block.settings.text != blank %}
          <div class="rte-setting mega-subtitle{% if block.settings.text_size == 'large' %} mega-subtitle--large{% endif %}">{{ block.settings.text }}</div>
        {% endif %}
        {% if block.settings.button_label != blank and block.settings.button_link != blank %}
          <a href="{{ block.settings.button_link }}" class="btn hero__btn team-member-img">
            {{ block.settings.button_label }}
          </a>
        {% endif %}
      </div>
    </div>
  </div>
</div>
{% endif %}
{% endfor %}
      <div class="about_bio container nopadding">
      <div class="row">
          <div class="col-md-20">
            <div class="bio_wrap three-colection-item ">
              <div class="hovereffect1">
              <div id="sarahbio" class="zoom-anim-dialog mfp-hide small-dialog">
                <p class="designation">OUR FOUNDER</p>
                <h2>SARAH VILLAFRANCO, MD</h2>
                <img src="//cdn.shopify.com/s/files/1/0447/3157/files/about-us_700x_9ee16a19-aa1e-4fc5-90e7-04ea04c18a2b_700x.png?v=1524174407" alt="{{block.settings.bio_name}}">
                <p><strong>{{block.settings.bio_designation}}</strong></p>
<p>
I started Osmia Organics in early 2010, a few months after taking a soap making class. It was not something I planned. At all. But it was love, immediately.
                </p><p>
I grew up in Washington, DC. I went to college there. I went to medical school there. I did my emergency medicine residency there. But after traveling to the mountains of Colorado to visit my brother, I knew I needed to move my life here. Every time the plane landed in Aspen, I had a deep, wonderful, settling feeling in my chest….
                </p><p>
Shortly after we arrived here, my mother was diagnosed with pancreatic cancer. The worst. Our second daughter was 3 months old when my mom died. We were lucky enough to be there to watch her go. The most beautiful moment I have yet known.
                </p><p>
Upon my return, and newly motherless, I had some thinking to do. I knew I didn’t want to work as a full time emergency physician (my mother worked way too much as a lawyer), so I worked part time. After almost ten years of practice, I became unsettled about the course of my career. I liked the work, and was good at it. But the practice of emergency medicine was not what I thought it would be. The paperwork. The dictations. The constant hum of worry in my brain about the existence of human error - that I could miss something with a potentially devastating result. And there was the upsetting fact that many of the patients I cared for had absolutely no interest in contributing to their own health.
                </p><p>
One day, while on the phone with my college roommate (a lawyer), she told me she had spent the last year making children’s natural bath products in her kitchen, and that she was starting a company and making a go of it (mytruenature.net). When she said it, it was as if something came into focus for me. I had been obsessed with lotions and potions, as my husband calls them, for as long as I could remember. Why not try to figure out how to make them myself, and make them naturally, using only ingredients that I really wanted to put on my skin? Hence, enrollment in the soap making class.
                </p><p>
After that first day making soap, my brain changed. I thought about soaps and lotions and scents constantly. I remembered, or perhaps realized, that I loved chemistry. It consumed me. Like when you fall in love and that person is the very first thing on your mind in the morning and the very last thing on your mind when you close your eyes at night. I even dreamed about it. I still dream about it.
                </p><p>
I spent almost two years in a converted storage room in my great friend Judi’s house, figuring out how to make stuff. I let myself out to eat, see my family, exercise, and work a few shifts in the hospital. I made innumerable batches of awful, unusable lotions. I cried over emulsifiers. I exploded a pot of liquid soap. I shrieked with joy when i made my first successful cream. I made my face a living laboratory, and suffered flares of my perioral dermatitis when I used too many products. I took a perfume class with Mandy Aftel, the world’s leading natural perfumer. I took classes with Lori Nova, of thenovastudio.com. I studied all of it endlessly, often long after the girls and my husband had fallen asleep. And, then, I started to get the hang of it all.
                </p><p>
In the spring of 2011, I started weighing options: keep a foot in medicine and a foot in Osmia, or shift my weight and jump in. I can’t help thinking my mother was involved in the choice. It seems to me that most dead people, were they capable, would advise most living people to do what they really love. I jumped.
                </p><p>
I leased a commercial space in Carbondale. With the guidance of several kind people around the country (or perhaps they could not stand another email from me, begging for advice), I put together a green facility with a small retail space, a soap making area, a perfumery station, and two “clean rooms” (clean room attire required) for making skin care products. We launched the store and the website in April of 2012. This is where we operate today (retail space and clean rooms pictured above).
                </p><p>
I love what I do now more than I could ever have imagined. I miss a few things about being in the ER, but, in some ways, feel like I am practicing broader medicine now - helping people choose natural and organic skin care products, encouraging them to nourish themselves physically and spiritually, and detoxifying their medicine cabinets all the while. Guiding people to make healthier choices for their skin, their bodies, their minds, and this beautiful planet seems like a brand of medicine that could really do some good.
                </p>
                </div>
              </div>
            </div>
            </div>
        </div>
        </div>
{% if section.blocks.size == 0 %}
<div class="full-width">
  <div class="container about-container">
    <div class="row row-{{ block.type }}{% if block.type == 'heading_row' %} align-items-center{% endif %}">
      {% include 'no-blocks' %}
      
    </div>
  </div>
</div>

{% endif %}

{% schema %}
  {
    "name": "About Us",
    "class": "index-section",
    "blocks": [
      {
        "type": "image",
        "name": "Image",
        "settings": [
          {
        "type": "image_picker",
        "id": "image",
        "label": "Image"
      },
          {
        "type": "image_picker",
        "id": "mobileimage",
        "label": "Mobile Image"
      },
      {
        "type": "radio",
        "id": "contained",
        "label": "Image should:",
        "options": [
          { "value": "container", "label": "Contstrain to container" },
          { "value": "container-fluid", "label": "Flow to the width of screen" }
        ],
        "default": "container-fluid"
      },
      {
        "type": "checkbox",
        "id": "overlay",
        "label": "Overlay image with color?",
        "info": "Color and opacity found in 'General settings'",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "parallax_me",
        "label": "Parallax the background?",
        "info": "This will disable 'Image alignment' below"
      },
      {
        "type": "select",
        "id": "parallax_sensitivity",
        "label": "Parallax sensitivity",
        "default": "200",
        "options": [
          {
            "value": "100",
            "label": "low"
          },
          {
            "value": "200",
            "label": "normal"
          },
          {
            "value": "300",
            "label": "high"
          }
        ]
      },
      {
        "type": "select",
        "id": "alignment",
        "label": "Image alignment",
        "default": "center",
        "options": [
          {
            "value": "top",
            "label": "Top"
          },
          {
            "value": "center",
            "label": "Middle"
          },
          {
            "value": "bottom",
            "label": "Bottom"
          }
        ]
      },
      {
        "type": "text",
        "id": "title",
        "label": "Heading",
        "default": "Image with text overlay"
      },
      {
        "type": "color",
        "id": "title_color",
        "label": "Heading color"
      },
      {
        "type": "richtext",
        "id": "text",
        "label": "Text",
        "default": "<p>Use overlay text to give your customers insight into your brand. Select imagery and text that relates to your style and story.</p>"
      },
      {
        "type": "color",
        "id": "text_color",
        "label": "Subheading color"
      },
      {
        "type": "select",
        "id": "hero_size",
        "label": "Section height",
        "default": "medium",
        "options": [
          {
            "label": "Extra Small",
            "value": "x-small"
          },
          {
            "label": "Small",
            "value": "small"
          },
          {
            "label": "Medium",
            "value": "medium"
          },
          {
            "label": "Large",
            "value": "large"
          },
          {
            "label": "Extra Large",
            "value": "x-large"
          }
        ]
      },
      {
        "type": "select",
        "id": "text_size",
        "label": "Text size",
        "default": "medium",
        "options": [
          {
            "label": "Medium",
            "value": "medium"
          },
          {
            "label": "Large",
            "value": "large"
          }
        ]
      },
      {
        "type": "text",
        "id": "button_label",
        "label": "Button label"
      },
      {
        "type": "url",
        "id": "button_link",
        "label": "Button link"
      },
      {
        "type": "color",
        "id": "border_color",
        "label": "border Color",
      "default": "#575493"
      },
      {
        "type": "color",
        "id": "button_color",
        "label": "Button Color",
      "default": "#000"
      },
      {
        "type": "color",
        "id": "background_color",
        "label": "Background Color",
      "default": "#fff"
      },
      {
        "type": "color",
        "id": "hover-background_color",
        "label": "Hover Background Color",
      "default": "#575493"
      },
      {
        "type": "color",
        "id": "hover_color",
        "label": "hover Color",
      "default": "#575493"
      },
      {
        "type": "select",
        "id": "text_layout",
        "label": "Text Position",
        "default": "center",
        "options": [
          {
            "value": "left",
            "label": "Text on Left"
          },
          {
            "value": "center",
            "label": "Text on Center"
          },
          {
            "value": "right",
            "label": "Text on right"
          }
        ]
      },
      {
        "type": "select",
        "id": "text_align",
        "label": "Text Aligment",
        "default": "center",
        "options": [
          {
            "value": "left",
            "label": "Left Aligned Text"
          },
          {
            "value": "center",
            "label": "Center Aligned Text"
          },
          {
            "value": "right",
            "label": "Right Aligned Text"
          }
        ]
      }
        ]
      },
      {
        "type": "team",
        "name": "team",
        "settings": [
          {
        "type": "image_picker",
        "id": "image",
        "label": "Image"
      },
          {
        "type": "image_picker",
        "id": "mobileimage",
        "label": "Mobile Image"
      },
      {
        "type": "radio",
        "id": "contained",
        "label": "Image should:",
        "options": [
          { "value": "container", "label": "Contstrain to container" },
          { "value": "container-fluid", "label": "Flow to the width of screen" }
        ],
        "default": "container-fluid"
      },
      {
        "type": "checkbox",
        "id": "overlay",
        "label": "Overlay image with color?",
        "info": "Color and opacity found in 'General settings'",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "parallax_me",
        "label": "Parallax the background?",
        "info": "This will disable 'Image alignment' below"
      },
      {
        "type": "select",
        "id": "parallax_sensitivity",
        "label": "Parallax sensitivity",
        "default": "200",
        "options": [
          {
            "value": "100",
            "label": "low"
          },
          {
            "value": "200",
            "label": "normal"
          },
          {
            "value": "300",
            "label": "high"
          }
        ]
      },
      {
        "type": "select",
        "id": "alignment",
        "label": "Image alignment",
        "default": "center",
        "options": [
          {
            "value": "top",
            "label": "Top"
          },
          {
            "value": "center",
            "label": "Middle"
          },
          {
            "value": "bottom",
            "label": "Bottom"
          }
        ]
      },
      {
        "type": "text",
        "id": "title",
        "label": "Heading",
        "default": "Image with text overlay"
      },
      {
        "type": "color",
        "id": "title_color",
        "label": "Heading color"
      },
      {
        "type": "richtext",
        "id": "text",
        "label": "Text",
        "default": "<p>Use overlay text to give your customers insight into your brand. Select imagery and text that relates to your style and story.</p>"
      },
      {
        "type": "color",
        "id": "text_color",
        "label": "Subheading color"
      },
      {
        "type": "select",
        "id": "hero_size",
        "label": "Section height",
        "default": "medium",
        "options": [
          {
            "label": "Extra Small",
            "value": "x-small"
          },
          {
            "label": "Small",
            "value": "small"
          },
          {
            "label": "Medium",
            "value": "medium"
          },
          {
            "label": "Large",
            "value": "large"
          },
          {
            "label": "Extra Large",
            "value": "x-large"
          }
        ]
      },
      {
        "type": "select",
        "id": "text_size",
        "label": "Text size",
        "default": "medium",
        "options": [
          {
            "label": "Medium",
            "value": "medium"
          },
          {
            "label": "Large",
            "value": "large"
          }
        ]
      },
      {
        "type": "text",
        "id": "button_label",
        "label": "Button label"
      },
      {
        "type": "text",
        "id": "button_link",
        "label": "Button link"
      },
 
 {
  "type": "color",
  "id": "border_color",
  "label": "border Color",
 "default": "#575493"
},
{
  "type": "color",
  "id": "button_color",
  "label": "Button Color",
 "default": "#000"
},
 {
  "type": "color",
  "id": "background_color",
  "label": "Background Color",
 "default": "#fff"
},
 {
  "type": "color",
  "id": "hover-background_color",
  "label": "Hover Background Color",
 "default": "#575493"
},
 {
  "type": "color",
  "id": "hover_color",
  "label": "hover Color",
 "default": "#575493"
},
      {
        "type": "select",
        "id": "text_layout",
        "label": "Text Position",
        "default": "center",
        "options": [
          {
            "value": "left",
            "label": "Text on Left"
          },
          {
            "value": "center",
            "label": "Text on Center"
          },
          {
            "value": "right",
            "label": "Text on right"
          }
        ]
      },
      {
        "type": "select",
        "id": "text_align",
        "label": "Text Aligment",
        "default": "center",
        "options": [
          {
            "value": "left",
            "label": "Left Aligned Text"
          },
          {
            "value": "center",
            "label": "Center Aligned Text"
          },
          {
            "value": "right",
            "label": "Right Aligned Text"
          }
        ]
      }
        ]
      }
    ]
  }
{% endschema %}
